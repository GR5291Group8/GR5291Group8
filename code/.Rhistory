help(cv.glmnet)
library(glmnet)
help(cv.glmnet)
knitr::opts_chunk$set(echo = TRUE)
data_vote_avg = read.csv("cleaned_movie_data_vote_average.csv", header = TRUE)
# fit linear regression models
lmod = lm(vote_average~., data = data_vote_avg)
View(lmod)
summary(lmod)
data = read.csv("cleaned_movie_data_vote_average.csv", header = TRUE)
rm(data_vote_avg)
library(car)
# vif
vif(lmod)
# all less than 10, no colinearity is detected
set.seed(123)
# 75% of the data are training; 25% of the data are testing
sample_size = floor(0.75 * nrow(data))
train_index = sample(seq_len(nrow(data)), size = sample_size)
train = data[train_index, ]
test = data[-train_index, ]
head(test)
set.seed(123)
# 75% of the data are training; 25% of the data are testing
sample_size = floor(0.75 * nrow(data))
train_index = sample(seq_len(nrow(data)), size = sample_size)
train_data = data[train_index, ]
test_data = data[-train_index, ]
head(test_data)
rm(test)
rm(train)
data(train_data)
x = data.matrix(train_data[,-1])
y = train_data$vote_average
x = data.matrix(train_data[,-1])
y = train_data$vote_average
ridgemodel = cv.glmnet(x, y = y, alpha = 0)
library(glmnet)
ridgemodel = cv.glmnet(x, y = y, alpha = 0)
plot(ridgemodel)
lambda_ridge = cv.glmnet(x, y = y, alpha = 0)
ridge_model <- glmnet(x,y,alpha = 0,lambda = lambda_ridge$lambda.min)
coef(ridge_model)
library(glmnet)
x = data.matrix(train_data[,-1])
y = train_data$vote_average
lambda_ridge = cv.glmnet(x, y = y, alpha = 0)
plot(ridgemodel)
ridge_model <- glmnet(x,y,alpha = 0,lambda = lambda_ridge$lambda.min)
coef(ridge_model)
summary(ridge_model)
View(ridge_model)
coef(ridge_model)
lmridge <- lm(vote_average ~ runtime + vote_count + year + month + History + Documentary + Crime + Thriller + Foreign + War + Adventure + Western + Mystery + Action + Comedy + Science.Fiction + Romance + Fantasy + Drama + Animation + Family + Horror + L4 + L6 + L9 + L10 + L12 + L13 + L14 + L15 + L27 + L32 + L33 + L50 + L52 + L53 + L54 + min_language + majority_studios + minority_studios, data = train_data)
par(mfrow = c(2,2))
plot(lassolm, 1)
plot(lmridge, 1)
summary(lmridge)$r.squared
lmridge <- lm(vote_average ~ runtime + vote_count + year + month + History + Documentary + Crime + Thriller + Foreign + War + Adventure + Western + Music + Mystery + Action + Comedy + Science.Fiction + Romance + Fantasy + Drama + Animation + Family + Horror + L4 + L6 + L9 + L10 + L12 + L13 + L14 + L15 + L27 + L32 + L33 + L50 + L52 + L53 + L54 + min_language + majority_studios + minority_studios, data = train_data)
summary(lmridge)$r.squared
hist(lmridge$residuals)
qqnorm(resid(lmridge))
qqline(resid(lmridge))
shapiro.test(resid(lmridge))
# graph
par(mfrow = c(2,2))
plot(lmridge)
library(lmtest)
# breush pagan test
bptest(lmridge) # p-value < 0.05 fail
# NCV Test
ncvTest(lmridge) # p-value = 0.024 < 0.05 fail
plot(lmridge)
durbinWatsonTest(lmridge)
library(car)
outlierTest(lmridge)
summary(train$vote_average);summary(train$runtime);summary(train$vote_count)
summary(train_data$vote_average);summary(train_data$runtime);summary(train_data$vote_count)
summary(train_data$minority_studios);summary(train_data$majority_studios)
summary(train_data$vote_average)
summary(train_data$runtime)
summary(train_data$vote_count)
summary(train_data$minority_studios)
summary(train_data$majority_studios)
outlierTest(lmridge)
train[row.names(train)=="706",]
train_data[row.names(train)=="706",]
train_data[row.names(train_data)=="706",]
train_data[row.names(train_data)=="2234",]
train_data[row.names(train_data)=="2581",]
train_data[row.names(train_data)=="357",]
plot(cooks.distance(lmridge))
plot(lmridge, which = c(4))
# remove outlier
train_data_ro = train_data[!row.names(train_data)%in%c("706", "2234", "2581", "357", "2244", "2132", "182"),]
dist_boxcox = BoxCoxTrans(train_data$vote_average)
library(caret)
dist_boxcox = BoxCoxTrans(train_data$vote_average)
dist_new = predict(dist_boxcox, train_data$vote_average)
fit_train_boxcox = lm(dist_new ~ runtime + vote_count + year + month + History + Documentary + Crime + Thriller + Foreign + War + Adventure + Western + Music + Mystery + Action + Comedy + Science.Fiction + Romance + Fantasy + Drama + Animation + Family + Horror + L4 + L6 + L9 + L10 + L12 + L13 + L14 + L15 + L27 + L32 + L33 + L50 + L52 + L53 + L54 + min_language + majority_studios + minority_studios, data = train_data)
par(mfrow = c(2,2))
plot(fit_train_boxcox, 1)
summary(fit_train_boxcox)$r.squared
hist(fit_train_boxcox$residuals)
qqnorm(resid(fit_train_boxcox))
qqline(resid(fit_train_boxcox))
shapiro.test(fit_train_boxcox$residuals)
bptest(fit_train_boxcox)
ncvTest(fit_train_boxcox)
ridge_model_ro =  lm(vote_average ~  runtime + vote_count + year + month + History + Documentary + Crime + Thriller + Foreign + War + Adventure + Western + Music + Mystery + Action + Comedy + Science.Fiction + Romance + Fantasy + Drama + Animation + Family + Horror + L4 + L6 + L9 + L10 + L12 + L13 + L14 + L15 + L27 + L32 + L33 + L50 + L52 + L53 + L54 + min_language + majority_studios + minority_studios, data = train_data_ro)
wts = 1/fitted(lm(abs(residuals(ridge_model_ro)) ~  fitted(ridge_model_ro), data = ridge_model_ro))^2
wts = 1/fitted(lm(abs(residuals(ridge_model_ro)) ~  fitted(ridge_model_ro), data = ridge_model_ro))^2
knitr::opts_chunk$set(echo = TRUE)
lmod_remove_out =  lm(vote_average~  runtime + vote_count + year + month + Documentary + Crime + War + Foreign + Adventure + Western + Music + Mystery + Action + Comedy + Science.Fiction + Romance + Fantasy + Drama + Animation + Family + Horror + L4 + L6 + L9 + L10 + L12 + L13 + L15 + L33 + L50 + L52 + L53 + L54 + min_language + majority_studios + minority_studios, data = train_remove_out)
lmod_remove_out =  lm(vote_average~  runtime + vote_count + year + month + Documentary + Crime + War + Foreign + Adventure + Western + Music + Mystery + Action + Comedy + Science.Fiction + Romance + Fantasy + Drama + Animation + Family + Horror + L4 + L6 + L9 + L10 + L12 + L13 + L15 + L33 + L50 + L52 + L53 + L54 + min_language + majority_studios + minority_studios, data = ridge_model_ro)
wts = 1/fitted(lm(abs(residuals(ridge_model_ro)) ~  fitted(ridge_model_ro), data = train_data_ro))^2
ridge_model_ro_wls = lm(vote_average ~  runtime + vote_count + year + month + History + Documentary + Crime + Thriller + Foreign + War + Adventure + Western + Music + Mystery + Action + Comedy + Science.Fiction + Romance + Fantasy + Drama + Animation + Family + Horror + L4 + L6 + L9 + L10 + L12 + L13 + L14 + L15 + L27 + L32 + L33 + L50 + L52 + L53 + L54 + min_language + majority_studios + minority_studios, weights = wts, data = train_data_ro)
par(mfrow = c(2,2))
plot(ridge_model_ro_wls, 1)
summary(ridge_model_ro_wls)$r.squared
hist(wlsmod$residuals)
hist(ridge_model_ro_wls$residuals)
qqnorm(resid(ridge_model_ro_wls))
qqline(resid(ridge_model_ro_wls))
shapiro.test(resid(ridge_model_ro_wls))
test_data <- data.matrix(test_data[,-1])
test_data <- data.matrix(test_data[,-1])
ridge_pred <- predict(ridge_model_ro, newx = test_data)
error_ridge <- mean(abs((test[,1] - ridge_pred) / test[,1]), na.rm = TRUE)
test_data <- data.matrix(test_data[,-1])
ridge_pred <- predict(ridge_model_ro, newx = test_data)
error_ridge <- mean(abs((test[,1] - ridge_pred) / test_data[,1]), na.rm = TRUE)
test_data <- data.matrix(test_data[,-1])
ridge_pred <- predict(ridge_model_ro, newx = test_data)
error_ridge <- mean(abs((test_data[,1] - ridge_pred) / test_data[,1]), na.rm = TRUE)
ridge_pred_wls <- predict(ridge_model_ro_wls, newx = test_data)
error_wls <- mean(abs((test_data[,1] - ridge_pred_wls) / test_data[,1]), na.rm = TRUE)
error_ridge
error_wls
